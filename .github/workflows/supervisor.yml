name: Claude Code Supervisor

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  validate-agents:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Node dependencies
      run: npm ci
    
    - name: Run Supervisor Validation
      run: python scripts/supervisor/ci_integration.py
      continue-on-error: true
    
    - name: Upload Supervisor Reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: supervisor-reports
        path: |
          scripts/supervisor/reports/
          scripts/supervisor/ci_report.json
          scripts/supervisor/dashboard.html
    
    - name: Comment PR with Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = JSON.parse(fs.readFileSync('scripts/supervisor/ci_report.json', 'utf8'));
          
          let comment = '## 🤖 Claude Code Supervisor Report\n\n';
          comment += `**Total Agents**: ${report.total_agents}\n`;
          comment += `- ✅ Completed: ${report.completed}\n`;
          comment += `- ⚠️ Needs Review: ${report.needs_review}\n`;
          comment += `- ❌ Failed: ${report.failed}\n\n`;
          
          if (report.failed > 0 || report.needs_review > 0) {
            comment += '### Issues Found:\n';
            for (const [agent, data] of Object.entries(report.agents)) {
              if (data.status !== 'Completed ✅') {
                comment += `\n**${agent}** (${data.status})\n`;
                if (data.issues.length > 0) {
                  comment += 'Issues:\n';
                  data.issues.forEach(issue => {
                    comment += `- ${issue}\n`;
                  });
                }
                if (data.recommendations.length > 0) {
                  comment += 'Recommendations:\n';
                  data.recommendations.forEach(rec => {
                    comment += `- ${rec}\n`;
                  });
                }
              }
            }
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Check Validation Status
      run: python scripts/supervisor/ci_integration.py